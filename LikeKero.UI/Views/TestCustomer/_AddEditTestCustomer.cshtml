@model CreateTestCustomerRequestVM

@using LikeKero.UI.ViewModels.Response
@{
    SelectList lisGender = new SelectList(new List<SelectListItem>
{

new SelectListItem { Text = "Male", Value = "Male"},
new SelectListItem {  Text = "Female", Value = "Female"},

}, "Value", "Text", 1);

    var versionName = Context.Session.GetString("SessionVersionName");
    string sessionVersion = versionName == null ? "" : Newtonsoft.Json.JsonConvert.DeserializeObject<string>(versionName);
    string imgPath = string.IsNullOrEmpty(sessionVersion) ? "" : "/" + sessionVersion;
}
<script src="https://code.jquery.com/ui/1.12.0/jquery-ui.min.js"></script>

<script src="~/js/dropzone/dropzone.js"></script>
<link href="~/js/dropzone/basic.css" rel="stylesheet" />
<link href="~/js/dropzone/dropzone.css" rel="stylesheet" />


@*<script src="~/lib/jquery/dist/jquery.min.js"></script>*@
<script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
<script src="~/lib/ckeditor/ckeditor.js"></script>

<link href="~/lib/bootstrap-datepicker/css/bootstrap-datepicker.min.css" rel="stylesheet" />
<script src="~/lib/bootstrap-datepicker/js/bootstrap-datepicker.js"></script>
<script src="~/lib/jquery-validation/dist/jquery.validate.js"></script>
<script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.js"></script>
<script src="~/lib/jquery.alphanum/jquery.alphanum.min.js"></script>



@*<style type="text/css">
        .criteriaInnerBox table {
            width: 90% !important;
            margin: 0 auto;
        }

        #frmEditor ul li {
            list-style: disc;
            margin-left: 20px;
        }

        #tdUnsubscribe {
            display: none;
        }
    </style>*@


<button type="button" id="btnShowEACFrom" class="hide"></button>
<form id="AddEditEventForm" asp-action="AddEditTestCustomer" asp-controller="TestCustomer" method="post" enctype="multipart/form-data">
    @*@Html.HiddenFor(x => x.CustID)*@
    @Html.HiddenFor(model => model.CustID, new { @id = "CustID" })
    <div class="filterBodyAddUser float-right">
        <div class="filterWrapp">
            <div class="bulkImport">
                <div class="paddLTRT">
                    <div class="filterHeader">
                        <span class="filterInText">Add/Edit Test Customer</span>
                        <div id="dismissAdd">
                            <img src="@Url.Content("~/Images/close.png")" />
                        </div>
                    </div>
                </div>
                <div class="filterBody addEditGroupHT addEditEvent">
                    <div class="userInfo">
                        <div class="pos">
                            <div class="row">
                                <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                                    <div class="successBox" style="display:none">
                                        <div class="successBoxText float-left">
                                            <h4>Success</h4>
                                            @if (string.IsNullOrEmpty(Model.CustID))
                                            {
                                                <label class="lblMessage">Test customer added successfully.</label>
                                            }
                                            else
                                            {
                                                <label class="lblMessage">Test customer updated successfully.</label>
                                            }
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                                    <div class="pull-right editIcon" style="display:none" id="editUser">
                                        <a href="#" onclick="EditUser()"><img src='@Url.Content("~/images"+imgPath+"/edit-g.png")' /></a>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                            </div>
                            <div class="row">
                                <div class="col-lg-8 col-md-7 col-sm-7 col-xs-12">
                                    <div class="form-group">
                                        <label>First Name<span class="starValid">*</span></label>
                                        @Html.TextBoxFor(x => x.FirstName, new { @class = "form-control", @maxlength = "50" })
                                        <span asp-validation-for="FirstName" class="redColor"></span>
                                    </div>
                                </div>

                            </div>



                            <div class="row">
                                <div class="col-lg-8 col-md-7 col-sm-7 col-xs-12">
                                    <div class="form-group">
                                        <label>last Name<span class="starValid">*</span></label>
                                        @Html.TextBoxFor(x => x.LastName, new { @class = "form-control", @maxlength = "50" })
                                        <span asp-validation-for="LastName" class="redColor"></span>
                                    </div>
                                </div>
                            </div>



                            <div class="row">
                                <div class="col-lg-8 col-md-7 col-sm-7 col-xs-12">
                                    <div class="form-group">
                                        <label>Gender</label>
                                        @Html.DropDownListFor(x => Model.Gender, lisGender, "Select", new { @class = "form-control" })
                                        <span asp-validation-for="Gender" class="redColor"></span>
                                    </div>
                                </div>
                            </div>





                            <div class="row">
                                <div class="col-lg-8 col-md-7 col-sm-7 col-xs-12">
                                    <div class="form-group">
                                        <label>Mob No<span class="starValid">*</span></label>
                                        @Html.TextBoxFor(x => x.MobNo, new { @class = "form-control", @maxlength = "10" })

                                    </div>
                                </div>

                            </div>

                            @*<div class="row">
            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                <div class="form-group">
                    <label>Address</label>
                    @Html.TextAreaFor(x => x.Address, new { @class = "form-control", @maxlength = "500" })
                </div>
            </div>
        </div>*@
                            <div class="row">
                                <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                                    @Html.Raw(Model.Address)
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                                    @Html.TextAreaFor(x => x.Address, new { id = "editor1" })
                                    <script>
                                        CKEDITOR.replace('editor1');  
                                        CKEDITOR.LinkBrowser = false;
                                    </script>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">
                                    <div class="form-group">
                                        <label>File Upload <span class="disNote pl-1">(Note: Only PDF Files)</span></label>
                                        <div class="custom-file nowrapTextFileupload">
                                            <input type="file" class="custom-file-input" name="uploadedFile" asp-for="uploadedFile" id="uploadedFile" accept=".pdf" multiple>
                                            <label id="lbluploadedFile" class="custom-file-label" for="uploadedFile">Choose file...</label>
                                        </div>
                                        @*<span asp-validation-for="uploadedFile" class="redColor"></span>*@
                                    </div>
                                </div>
                            </div>

                            <div class="row" id="DivUploadEAC">
                                <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
                                    <div class="installReadInfoBox">
                                        <div class="profilePicBox">
                                            <div class="dropzone" id="dvShowEACFrom">
                                                <div class="progress" id="preview_template_ShowEACFrom" style="display:none;">
                                                    <div id="progressbar_ShowEACFrom" class="progress-bar progress-bar-primary" role="progressbar" data-dz-uploadprogress>
                                                        <span class="progress-text_ShowEACFrom"></span>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div id="spEData5"></div>
                                    @*<div id="tdShowEACFrom">
                    @Html.Partial("_ShowFilesDetails", Model.ShowList.Where(x => x.Category == ServiceOrderFile.ShowEACFrom.ToString()).ToList())

                </div>*@
                                </div>
                            </div>



                            <div class="row">
                                <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                                    <div class="eventuploadlistCont">
                                        <ul id="UlFiles" class="uploadedEvent">
                                            @if (Model.FileName != null)
                                            {
                                                Uri url = new Uri(Model.FileName);
                                                string filename1 = System.IO.Path.GetFileName(url.LocalPath);
                                                <li class="upeventFiles">
                                                    <a class="FileNameEX" href="@Model.FileName" target="_blank">@filename1</a>
                                                    <a href="javascript:void(0);" data-id="@Model.CustID" class="clsDelFile">
                                                        <span class="pull-right fa fa-times mt-1"></span>
                                                    </a>
                                                </li>

                                            }
                                        </ul>
                                        <div class="clearfix"></div>
                                    </div>
                                </div>
                            </div>

                        </div>

                    </div>
                </div>
                <div class="tabRTFooter" style="display:none">
                    <div class="bulkImpFooter">
                        <ul class="bulkImpListing">
                            <li>
                                <button type="button" class="btn btn-primary btnSearch" id="btnSubmit">Submit</button>
                            </li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </div>
</form>

@*<script type="text/javascript">CKEDITOR.replace('#editor1');</script>*@

<script type="text/javascript">
    $("#dismissAdd, .overlay").on('click', function (e) {
        $('#sidebarFilterAddUser').removeClass('active');
        $("#sidebarFilterAddUser").hide();
        $('.overlay').hide();

    });




    //introduction = document.getElementById('editor1'),
    //    introductionHTML = introduction.innerHTML;

    // CKEDITOR.inline('editor1', {

    //                allowedContent: true,
    //                startupFocus: true,
    //                filebrowserUploadUrl: 'UploadTemplateFile?NewsLetterId=eeeedd',
    //                filebrowserUploadMethod: 'form',
    //                filebrowserImageBrowseUrl: "imagebrowser",
    //                filebrowserImageWindowWidth: 780,
    //                filebrowserImageWindowHeight: 720,
    //                //filebrowserImageBrowseUrl: "linkbrowser",
    //                filebrowserWindowWidth: 350,
    //                filebrowserWindowHeight: 500
    //            });


</script>

<script>
    $(".Alphanum").alphanum();


    $("#btnSubmit").on('click', function (e) {
        e.preventDefault();

        $('#AddEditEventForm').find('input:text').each(function () {
            $(this).val($.trim($(this).val()));
        });

        if ($('#AddEditEventForm').valid()) {


            for (instance in CKEDITOR.instances) {
                CKEDITOR.instances[instance].updateElement();
            }


            var FirstName = $("#FirstName").val();
            var LastName = $("#LastName").val();
            var MobNo = $("#MobNo").val();
            var Gender = $("#Gender").val();


            var formAction = $('#AddEditEventForm').attr("action");
            var fdata = new FormData();
            var params = $('#AddEditEventForm').serializeArray();
            $.each(params, function (i, val) {
                fdata.append(val.name, val.value);
            });


            var fileUpload = $("#uploadedFile")[0];
            var files = fileUpload.files;

            for (var i = 0; i < files.length; i++) {
                fdata.append("uploadedFile", files[i]);
            }


            $.ajax({
                type: 'post',
                url: formAction,
                data: fdata,
                processData: false,
                contentType: false
            }).done(function (result) {
                debugger;
                if (result.isSuccess == true) {
                    debugger;

                    $('#CustID').val(result.custID);
                    $('#btnSearch1').click();
                    $('.successBox').show();
                    $('#lblMessage').text(result.message);

                    $('#AddEditEventForm input').attr('readonly', 'readonly');
                    $('#AddEditEventForm select').attr('readonly', 'readonly');
                    $('#AddEditEventForm textarea').attr('readonly', 'readonly');
                    $("#AddEditEventForm input").attr('disabled', 'disabled');
                    $("#AddEditEventForm select").attr('disabled', 'disabled');
                    $("#AddEditEventForm textarea").attr('disabled', 'disabled');

                    $(".tabRTFooter .btnSearch").removeClass("btn-primary");
                    $(".tabRTFooter .btnSearch").addClass("btn-default disabled");
                    $('.tabRTFooter .btnSearch').prop('disabled', true);
                    $('#editUser').show();

                    $('#btnShowEACFrom').click();

                } else {
                    showWarningMsg('something went wrong ');
                }
            });
        }
    });


    function EditUser() {
        $('#AddEditEventForm input').attr('readonly', false);
        $('#AddEditEventForm select').attr('readonly', false);
        $('#AddEditEventForm textarea').attr('readonly', false);
        $("#AddEditEventForm input").removeAttr('disabled');
        $("#AddEditEventForm select").removeAttr('disabled');
        $("#AddEditEventForm textarea").removeAttr('disabled');



        $(".tabRTFooter .btnSearch").addClass("btn-primary");
        $(".tabRTFooter .btnSearch").removeClass("btn-default disabled");
        $('.tabRTFooter .btnSearch').prop('disabled', false);
        $('.successBox').hide();
        $('#editUser').hide();
    }

</script>

<script type="text/javascript">
    $('.tabRTFooter').show();
</script>


<script>

    var count5 = 0;
    Dropzone.autoDiscover = false;
    $("#dvShowEACFrom").dropzone({
        url: '@Url.Action("UploadTestCustomerFiles", "TestCustomer")?CustID=' +'@Model.CustID' + '',
        dictDefaultMessage: "Upload File",
        autoProcessQueue: false,
        acceptedFiles: ".png,.jpg,.gif,.bmp,.jpeg,.pdf",
        maxfilesize: 500,//max file size in mb,
        uploadMultiple: true,
        maxFiles: 100,
        parallelUploads: 100,
        previewTemplate: document.getElementById('preview_template_ShowEACFrom').innerHTML,

        //clickable: '#btnBrowse',
        init: function () {
            var myDropzone = this;

            this.on('addedfile', function (file) {

                $("#preview_template_ShowEACFrom").show();

                count5 = count5 + 1;
                var aid = 'lnk' + count5.toString();

                var prevdata = $('#spEData5')[0].innerHTML;

                var data = '<span id="spEac' + count5 + '">' + file.name + '(' + parseFloat(file.size / 1024.0).toFixed(2) + 'KB) <a class="remove_fileShowEACFrom" id="' + aid + '"><i style="cursor:pointer" class="fa fa-trash"></i></a> <br/></span>'
                $('#spEData5')[0].innerHTML = prevdata + data;
            });

            this.on("totaluploadprogress", function (progress) {
                if (this.files.length > 0) {
                    $("#progressbar_ShowEACFrom")[0].style.width = progress + "%";
                    $(".progress-text_ShowEACFrom").text("Uploading...");
                }
                else {
                    this.removeAllFiles(true);
                    $("#preview_template_ShowEACFrom").hide();
                }
            });

            this.on("success", function (file) {
                //this.removeAllFiles(true);

            });

            this.on("complete", function (file) {
            });

            this.on("successmultiple", function (file) {
                //$("#tdShowEACFrom").load('@Url.Action("GetShowFiles", "Show")?ShowId=' + '' + '&Category=' + '');
                $("#spEData5").empty();
               // $('#btnQuickFact').click();
                //alert(1);

            });

            $('#btnShowEACFrom').on("click", function () {
                if (myDropzone.getQueuedFiles().length > 0) {
                    myDropzone.processQueue();
                }
                else {

                   // $('#btnQuickFact').click();
                   // alert(2);
                }
            });
        },
    });


    $(document).ready(function () {

        var myDropzone = Dropzone.forElement("#dvShowEACFrom");

        $(document).on('click', ".remove_fileShowEACFrom", function (e) {
            e.stopImmediatePropagation();

            var c = this.id.replace('lnk', '');
            var filename = $('span#spEac' + c)[0].innerText;
            filename = filename.replace(/,\s*$/, "").trim();
            var cindex = 0;

            var flag = 0;
            for (var i = 0; i < myDropzone.files.length; i++) {
                var file = myDropzone.files[i];
                var fname = file.name + '(' + parseFloat(file.size / 1024.0).toFixed(2) + 'KB)';
                if (fname == filename) {
                    flag = 1; cindex = i; break;
                }
            }

            if (flag == 1) {
                myDropzone.removeFile(myDropzone.files[cindex]);
                $('span#spEac' + c).remove();
            }
        });

    });

</script>